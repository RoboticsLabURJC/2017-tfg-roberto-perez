// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.7.0
//
// <auto-generated>
//
// Generated from file `visualization.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    const Ice = require("ice").Ice;
    const _ModuleRegistry = Ice._ModuleRegistry;
    const jderobot = _ModuleRegistry.require(module,
    [
        "/Users/roberto/Documents/TFG/Node3DViewer/jderobot/common",
        "/Users/roberto/Documents/TFG/Node3DViewer/jderobot/primitives"
    ]).jderobot;

    const Slice = Ice.Slice;

    jderobot.Color = class
    {
        constructor(r = 0.0, g = 0.0, b = 0.0)
        {
            this.r = r;
            this.g = g;
            this.b = b;
        }

        _write(ostr)
        {
            ostr.writeFloat(this.r);
            ostr.writeFloat(this.g);
            ostr.writeFloat(this.b);
        }

        _read(istr)
        {
            this.r = istr.readFloat();
            this.g = istr.readFloat();
            this.b = istr.readFloat();
        }

        static get minWireSize()
        {
            return  12;
        }
    };

    Slice.defineStruct(jderobot.Color, false, false);

    const iceC_jderobot_Visualization_ids = [
        "::Ice::Object",
        "::jderobot::Visualization"
    ];

    /**
     * Interface to the Visualization interaction.
     **/
    jderobot.Visualization = class extends Ice.Object
    {
    };

    jderobot.VisualizationPrx = class extends Ice.ObjectPrx
    {
    };

    Slice.defineOperations(jderobot.Visualization, jderobot.VisualizationPrx, iceC_jderobot_Visualization_ids, 1,
    {
        "drawSegment": [, , , , , [[jderobot.Segment], [jderobot.Color]], , , , ],
        "drawPoint": [, , , , , [[jderobot.Point], [jderobot.Color]], , , , ],
        "clearAll": [, , , , , , , , , ]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice._require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
